generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id    String     @id @default(uuid())
  email String     @unique
  name  String?     @unique
  location  String?
  education String?
  isAuthor Boolean @default(false)
  publishedPosts Post[] @relation(name: "publishedPosts")
  likedPosts Post[] @relation(name: "likedPosts")
  comments Comment[]
  createdAt DateTime @default(now())
}

model Post {
  id        String      @id @default(uuid())
  title     String      
  slug      String   @unique
  content   String
  cover     String?
  authorId  String
  author    User    @relation(name: "publishedPosts",fields: [authorId], references: [id], onDelete: Cascade)
  users     User[]  @relation(name: "likedPosts")
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category{
  id       String      @id @default(uuid())
  title     String      @unique
  posts    Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment{
    id  String   @id @default(uuid())
    content String
    postId String
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
    replyToId String?
    replyTo Comment? @relation(name: "CommentReplies" ,fields: [replyToId], references: [id])
    replies Comment[] @relation("CommentReplies")
    authorId String
    author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
}